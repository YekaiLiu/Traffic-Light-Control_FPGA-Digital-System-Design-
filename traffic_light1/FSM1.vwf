/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2007 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("C")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("T1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T1";
}

SIGNAL("T1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T1";
}

SIGNAL("T1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T1";
}

SIGNAL("T1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T1";
}

SIGNAL("T1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T1";
}

SIGNAL("T2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T2";
}

SIGNAL("T2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T2";
}

SIGNAL("T2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T2";
}

SIGNAL("T2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T2";
}

SIGNAL("T2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "T2";
}

SIGNAL("G")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("G[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("G[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "G";
}

SIGNAL("F")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("C")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("CG")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.5;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 17.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 17.0;
		LEVEL 0 FOR 468.5;
	}
}

TRANSITION_LIST("CR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 37.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 31.0;
		}
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 463.5;
	}
}

TRANSITION_LIST("CY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 54.5;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 463.5;
	}
}

TRANSITION_LIST("MG")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 32.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 27.0;
			LEVEL 1 FOR 26.0;
		}
		LEVEL 0 FOR 27.0;
		LEVEL 1 FOR 463.5;
	}
}

TRANSITION_LIST("MR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.5;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 31.0;
		}
		LEVEL 1 FOR 22.0;
		LEVEL 0 FOR 463.5;
	}
}

TRANSITION_LIST("MY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32.5;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 485.5;
	}
}

TRANSITION_LIST("RET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("T1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("T1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 19.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 28;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 5.5;
	}
}

TRANSITION_LIST("T1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
		}
		NODE
		{
			REPEAT = 54;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.5;
	}
}

TRANSITION_LIST("T1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 3.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 4.0;
				NODE
				{
					REPEAT = 4;
					LEVEL 1 FOR 2.0;
					LEVEL 0 FOR 2.0;
				}
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 110;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.5;
	}
}

TRANSITION_LIST("T1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 25;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
		}
		NODE
		{
			REPEAT = 219;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("T2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("T2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 13.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 9.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("T2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 3.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 57;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("T2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 3.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 115;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("T2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 26;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
			NODE
			{
				REPEAT = 13;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 230;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("G[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 512.5;
		LEVEL 1 FOR 487.5;
	}
}

TRANSITION_LIST("G[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 512.0;
		LEVEL 1 FOR 487.5;
	}
}

TRANSITION_LIST("G[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 256.0;
		LEVEL 0 FOR 256.0;
		LEVEL 1 FOR 256.0;
		LEVEL 0 FOR 231.5;
	}
}

TRANSITION_LIST("G[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 103.5;
	}
}

TRANSITION_LIST("G[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 64.0;
			LEVEL 0 FOR 64.0;
		}
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("G[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 7.5;
	}
}

TRANSITION_LIST("G[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 7.5;
	}
}

TRANSITION_LIST("G[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 62;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 7.5;
	}
}

TRANSITION_LIST("G[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.5;
	}
}

TRANSITION_LIST("G[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.5;
	}
}

TRANSITION_LIST("G[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 499;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("F")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 999.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "C";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "T1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "T1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "T1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "T1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "T1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "T2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "T2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "T2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "T2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "T2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "T2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "G";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "G[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "G[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "F";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 110000;
	MASTER = TRUE;
}
;
